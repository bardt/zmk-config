/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NUMBERS 1
#define SYMBOLS 2
#define NAV     3
#define ADJUST  4
#define NUMPAD  5

/ {
        conditional_layers {
            compatible = "zmk,conditional-layers";
            tri_layer {
                if-layers = <SYMBOLS NAV>;
                then-layer = <ADJUST>;
            };
        };

        behaviors {
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                tapping-term-ms = <150>;
                quick-tap-ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };

            bhm: balanced_homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                tapping-term-ms = <200>;    // <---[[moderate duration]]
                quick-tap-ms = <0>;
                flavor = "balanced";
                bindings = <&kp>, <&kp>;
            };

            bspc_del: backspace_delete {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp BACKSPACE>, <&kp DELETE>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
                keep-mods = <(MOD_RSFT)>;
            };
        };

        macros {
                umlaut: umlaut {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp RALT>
                                , <&macro_tap &kp U>
                                , <&macro_release &kp RALT>
                                ;
                };

                alt_left: alt_left {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LALT>
                                , <&macro_tap &kp LEFT>
                                , <&macro_release &kp LALT>
                                ;
                };


                alt_right: alt_right {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LALT>
                                , <&macro_tap &kp RIGHT>
                                , <&macro_release &kp LALT>
                                ;
                };

		macro_pipe_left: macro_pipe_left {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp LT>, <&kp PIPE>;
		};

		macro_pipe_right: macro_pipe_right {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp PIPE>, <&kp GT>;
		};
        };

	combos {
		compatible = "zmk,combos";
		combo_pipe_left {
		    timeout-ms = <50>;
		    key-positions = <25 26>;
		    bindings = <&macro_pipe_left>;
		};
		
		combo_pipe_right {
		    timeout-ms = <50>;
		    key-positions = <27 28>;
		    bindings = <&macro_pipe_right>;
		};
	};
	





        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | ESC |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L  |  U  |  Y  |  ;  |     |
// | TAB |  A  |  R  |  S  |  T  |  G  |   |  M  |  N  |  E  |  I  |  O  |  '  |
// | CAPS|  Z  |  X  |  C  |  D  |  V  |   |  K  |  H  |  ,  |  .  |  /  |     |
//                   | NAV | LWR | SPC |   | ENT | RSE | NAV |
                        bindings = <
   &kp ESC      &kp Q           &kp W           &kp F       &kp P       &kp B       &kp J   &kp L       &kp U       &kp Y           &kp SEMI        &umlaut
   &kp TAB      &bhm LSHIFT A   &bhm LCTRL R    &bhm LALT S &bhm LGUI T &kp G       &kp M   &bhm RGUI N &bhm LALT E &bhm RCTRL I    &bhm RSHIFT O   &kp SQT
   &kp CAPSLOCK &kp Z           &kp X           &kp C       &kp D       &kp V       &kp K   &kp H       &kp COMMA   &kp DOT         &kp FSLH        &caps_word
                                                &mo NUMBERS &mo SYMBOLS &kp SPACE   &kp RET &mo NAV     &mo NUMPAD
                        >;
                };

                numbers_layer {
// -----------------------------------------------------------------------------------------
// |  0  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
// | F1  | F2  | F3  | F4  | F5  | F6  |   |     |     |     |     |     |     |
// | F7  | F8  | F9  | F10 | F11 | F12 |   |     |     |     |     |     |     |
//                   |     |     |     |   |     |     |     |
                        bindings = <
    &kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5      &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &none
    &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6      &bspc_del   &kp RGUI    &kp LALT    &kp RCTRL   &kp RSHIFT  &none
    &kp F7  &kp F8  &kp F9  &kp F10 &kp F11 &kp F12     &none       &none       &trans      &trans      &trans      &none
                            &trans  &trans  &trans      &trans      &trans      &trans
                        >;
                };

                symbols_layer {
// -----------------------------------------------------------------------------------------
// |  ?  |  !  |  @  |  :  |  %  |  ^  |   |  $  |  &  |  (  |  )  |     |
// |     |     |     |     |     |     |   |  -  |  =  |  [  |  ]  | "|" |  `   |
// |     |     |  <  |  >  |     |     |   |  #  |  *  |  {  |  }  |  \  |  ~   |
//                   |     |     |     |   |     |     |     |
                        bindings = <
    &kp QMARK   &kp EXCL    &kp AT      &kp COLON   &kp PRCNT   &kp CARET   &kp DLLR    &kp AMPS         &kp LPAR    &kp RPAR    &none       &none
    &none       &kp LSHIFT  &kp LCTRL   &kp LALT    &kp LGUI    &none       &kp MINUS   &kp EQUAL        &kp LBKT    &kp RBKT    &kp PIPE    &kp GRAVE
    &none       &none       &kp LT      &kp GT      &none       &none       &kp HASH    &kp KP_MULTIPLY  &kp LBRC    &kp RBRC    &kp BSLH    &kp TILDE
                                        &trans      &trans      &trans      &trans      &trans           &trans
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |     |   |     |     |PG_DN|PG_UP|     |     |
// |     |     |     |     |     |     |   | BKSP| LEFT| DOWN|  UP |RIGHT|     |
// |     |     |     |     |     |     |   |     |  H  |  J  |  K  |  L  |     |
//                   |     |     | SPC |   | ENT |     |     |
                        bindings = <
    &none   &none       &none       &none       &none       &none   &none       &none       &kp PG_DN   &kp PG_UP   &none       &none
    &none   &kp LSHIFT  &kp LCTRL   &kp LALT    &kp LGUI    &none   &bspc_del   &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &none
    &none   &none       &none       &none       &none       &none   &none       &kp H       &kp J       &kp K       &kp L       &none
                                    &trans      &trans      &trans  &trans      &trans      &trans
                        >;
                };

                adjust_layer {
// -----------------------------------------------------------------------------------------
// |BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |BR UP| MUT | V DN| V UP|     |     |
// |     |     |     |     |     |     |   |BR DN| BCK | PLAY| FWD |     |     |
// |     |     |     |     |     |     |   |     |     |     |     |     |     |
//                   |     |     | SPC |   | ENT |     |     |
                        bindings = <
    &bt BT_CLR      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &kp C_BRI_UP    &kp K_MUTE  &kp C_VOL_DN    &kp C_VOL_UP    &none   &kp C_MUTE
    &none           &none           &none           &none           &none           &none           &kp C_BRI_DN    &kp C_PREV  &kp C_PP        &kp C_NEXT      &none   &none
    &studio_unlock  &none           &none           &none           &none           &none           &none           &none       &none           &none           &none   &none
                                                    &trans          &trans          &trans          &trans          &trans      &trans
                        >;
                };

                numpad_layer {
// -----------------------------------------------------------------------------------------
// |    |     |     |     |     |     |   |  =  |  7  |  8  |  9  |  0  | BSPC|
// |    |     |     |     |     |     |   |  -  |  4  |  5  |  6  |  *  |     |
// |    |     |     |     |     |     |   |  +  |  1  |  2  |  3  |  /  |     |
//                  |     |     | SPC |   | ENT |     |     |
                        bindings = <
    &none           &none           &none           &none           &none           &none           &kp KP_EQUAL    &kp KP_N7      &kp KP_N8          &kp KP_N9          &kp KP_N0         &kp BSPC
    &none           &none           &none           &none           &none           &none           &kp KP_MINUS    &kp KP_N4      &kp KP_N5          &kp KP_N6          &kp KP_MULTIPLY   &none
    &none           &none           &none           &none           &none           &none           &kp KP_PLUS     &kp KP_N1      &kp KP_N2          &kp KP_N3          &kp KP_DIVIDE     &none
                                                    &trans          &trans          &trans          &trans          &trans         &trans
                        >;
                };
        };
};
