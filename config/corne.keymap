/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define QWERTY  1
#define LOWER   2
#define RAISE   3
#define NAV     4
#define ADJUST  5


/ {
        conditional_layers {
            compatible = "zmk,conditional-layers";
            tri_layer {
                if-layers = <LOWER RAISE>;
                then-layer = <ADJUST>;
            };
        };

        behaviors {
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick-tap-ms = <125>;
                global-quick-tap;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };

            bspc_del: backspace_delete {
                compatible = "zmk,behavior-mod-morph";
                label = "BACKSPACE_DELETE";
                #binding-cells = <0>;
                bindings = <&kp BACKSPACE>, <&kp DELETE>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
                keep-mods = <(MOD_RSFT)>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | ESC |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L  |  U  |  Y  |  ;  |     |
// | TAB |  A  |  R  |  S  |  T  |  G  |   |  M  |  N  |  E  |  I  |  O  |  '  |
// | CAPS|  Z  |  X  |  C  |  D  |  V  |   |  K  |  H  |  ,  |  .  |  /  |     |
//                   | NAV | LWR | SPC |   | ENT | RSE | NAV |
                        bindings = <
   &kp ESC      &kp Q           &kp W       &kp F       &kp P       &kp B       &kp J   &kp L       &kp U       &kp Y       &kp SEMI        &none
   &kp TAB      &hm LSHIFT A    &hm LCTRL R &hm LALT S  &hm LGUI T  &kp G       &kp M   &hm RGUI N  &hm RALT E  &hm RCTRL I &hm RSHIFT O    &kp SQT
   &kp CAPSLOCK &kp Z           &kp X       &kp C       &kp D       &kp V       &kp K   &kp H       &kp COMMA   &kp DOT     &kp FSLH        &trans
                                            &mo NAV     &mo LOWER   &kp SPACE   &kp RET &mo RAISE   &mo NAV
                        >;
                };

                qwerty_layer {
// -----------------------------------------------------------------------------------------
// | ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  |     |
// | TAB |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |  '  |
// | CAPS|  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  |     |
//                   | NAV | LWR | SPC |   | ENT | RSE | NAV |
                        bindings = <
   &kp ESC      &kp Q           &kp W       &kp E       &kp R       &kp T       &kp Y   &kp U       &kp I       &kp O       &kp P           &none
   &kp TAB      &hm LSHIFT A    &hm LCTRL S &hm LALT D  &hm LGUI F  &kp G       &kp H   &hm RGUI J  &hm RALT K  &hm RCTRL L &hm RSHIFT SEMI &kp SQT
   &kp CAPSLOCK &kp Z           &kp X       &kp C       &kp V       &kp B       &kp N   &kp M       &kp COMMA   &kp DOT     &kp FSLH        &trans
                                            &mo NAV     &mo LOWER   &kp SPACE   &kp RET &mo RAISE   &mo NAV
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |     |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
// | F1  | F2  | F3  | F4  | F5  | F6  |   |     |     |     |     |     |     |
// | F7  | F8  | F9  | F10 | F11 | F12 |   |     |     |     |     |     |     |
//                   |     |     |     |   |     |     |     |
                        bindings = <
    &trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5      &kp N6  &kp N7      &kp N8      &kp N9      &kp N0      &none
    &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6      &none   &kp RGUI    &kp RALT    &kp RCTRL   &kp RSHIFT  &none
    &kp F7  &kp F8  &kp F9  &kp F10 &kp F11 &kp F12     &none   &none       &none       &none       &none       &none
                            &trans  &trans  &trans      &trans  &trans      &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      |
// |      |     |  <  |  >  |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// |      |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    |     |     |     |   |     |     |     |
                        bindings = <
    &trans  &kp EXCL    &kp AT      &kp HASH    &kp DLLR    &kp PRCNT   &kp CARET   &kp AMPS    &kp KP_MULTIPLY &kp LPAR    &kp RPAR    &trans
    &none   &kp LSHIFT  &kp LCTRL   &kp LALT    &kp LGUI    &none       &kp MINUS   &kp EQUAL   &kp LBKT        &kp RBKT    &kp BSLH    &kp GRAVE
    &none   &none       &kp LT      &kp GT      &none       &none       &kp UNDER   &kp PLUS    &kp LBRC        &kp RBRC    &kp PIPE    &kp TILDE
                                    &trans      &trans      &trans      &trans      &trans      &trans
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |     |   |     |     |  UP |     |     |     |
// |     |     |     |     |     |     |   | BKSP| LEFT| DOWN|RIGHT|     |     |
// |     |     |     |     |     |     |   |     |     |     |     |     |     |
//                   |     |     | SPC |   | ENT |     |     |
                        bindings = <
    &none   &none       &none       &none       &none       &none   &none       &none       &kp UP      &none       &none   &none
    &none   &kp LSHIFT  &kp LCTRL   &kp LALT    &kp LGUI    &none   &bspc_del   &kp LEFT    &kp DOWN    &kp RIGHT   &none   &none
    &none   &none       &none       &none       &none       &none   &none       &none       &none       &none       &none   &none
                                    &trans      &trans      &trans  &trans      &trans      &trans
                        >;
                };

                adjust_layer {
// -----------------------------------------------------------------------------------------
// |BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |BR UP| MUT | V DN| V UP|     |     |
// |     |     |     |     |     |     |   |BR DN| BCK | PLAY| FWD |     |     |
// |     |     |     |     |     |     |   |     |     |     |     |     |     |
//                   |     |     | SPC |   | ENT |     |     |
                        bindings = <
    &bt BT_CLR      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &kp C_BRI_UP    &kp K_MUTE  &kp C_VOL_DN    &kp C_VOL_UP    &none   &none
    &none           &none           &none           &none           &none           &none           &kp C_BRI_DN    &kp C_PREV  &kp C_PP        &kp C_NEXT      &none   &none
    &tog QWERTY     &none           &none           &none           &none           &none           &none           &none       &none           &none           &none   &none
                                                    &trans          &trans          &trans          &trans          &trans      &trans
                        >;
                };
        };
};
